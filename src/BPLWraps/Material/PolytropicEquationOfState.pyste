polytrope = Template("Spheral::Material::PolytropicEquationOfState",
                     "ExtendPolytropicEquationOfState.hh")

add_property(polytrope, "polytropicConstant", "polytropicConstant")
add_property(polytrope, "polytropicIndex", "polytropicIndex")
add_property(polytrope, "gamma", "gamma")
add_property(polytrope, "molecularWeight", "molecularWeight")
add_property(polytrope, "externalPressure", "externalPressure", "setExternalPressure")

final(polytrope.setPressure)
final(polytrope.setTemperature)
final(polytrope.setSpecificThermalEnergy)
final(polytrope.setSpecificHeat)
final(polytrope.setSoundSpeed)
final(polytrope.setGammaField)
final(polytrope.pressure)
final(polytrope.temperature)
final(polytrope.specificThermalEnergy)
final(polytrope.specificHeat)
final(polytrope.soundSpeed)
final(polytrope.gamma)

polytropeCGS1d = polytrope("Spheral::Dim<1> Spheral::Material::PhysicalConstants<Spheral::Material::CGSUnits>", "PolytropicEquationOfStateCGS1d")
polytropeMKS1d = polytrope("Spheral::Dim<1> Spheral::Material::PhysicalConstants<Spheral::Material::MKSUnits>", "PolytropicEquationOfStateMKS1d")
polytropeCosmological1d = polytrope("Spheral::Dim<1> Spheral::Material::PhysicalConstants<Spheral::Material::CosmologicalUnits>", "PolytropicEquationOfStateCosmological1d")

polytropeCGS2d = polytrope("Spheral::Dim<2> Spheral::Material::PhysicalConstants<Spheral::Material::CGSUnits>", "PolytropicEquationOfStateCGS2d")
polytropeMKS2d = polytrope("Spheral::Dim<2> Spheral::Material::PhysicalConstants<Spheral::Material::MKSUnits>", "PolytropicEquationOfStateMKS2d")
polytropeCosmological2d = polytrope("Spheral::Dim<2> Spheral::Material::PhysicalConstants<Spheral::Material::CosmologicalUnits>", "PolytropicEquationOfStateCosmological2d")

polytropeCGS3d = polytrope("Spheral::Dim<3> Spheral::Material::PhysicalConstants<Spheral::Material::CGSUnits>", "PolytropicEquationOfStateCGS3d")
polytropeMKS3d = polytrope("Spheral::Dim<3> Spheral::Material::PhysicalConstants<Spheral::Material::MKSUnits>", "PolytropicEquationOfStateMKS3d")
polytropeCosmological3d = polytrope("Spheral::Dim<3> Spheral::Material::PhysicalConstants<Spheral::Material::CosmologicalUnits>", "PolytropicEquationOfStateCosmological3d")
