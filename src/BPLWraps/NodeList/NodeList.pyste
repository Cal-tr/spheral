#-------------------------------------------------------------------------------
# Externally exported classes.
#-------------------------------------------------------------------------------
Exported("Spheral::DataOutput::Restart")

#-------------------------------------------------------------------------------
# NodeList Template
#-------------------------------------------------------------------------------
x = Template("Spheral::NodeSpace::NodeList", "ExtendNodeList.hh")

exclude(x.neighborPtr)
exclude(x.initialize)
exclude(x.registeredFieldsBegin)
exclude(x.registeredFieldsEnd)
exclude(x.packNodeFieldValues)
exclude(x.appendInternalNodes)

set_policy(x.mass, return_internal_reference())
set_policy(x.positions, return_internal_reference())
set_policy(x.velocity, return_internal_reference())
set_policy(x.Hfield, return_internal_reference())
set_policy(x.work, return_internal_reference())
set_policy(x.DxDt, return_internal_reference())
set_policy(x.DvelocityDt, return_internal_reference())
set_policy(x.DvelocityDx, return_internal_reference())
set_policy(x.internalDvDx, return_internal_reference())
set_policy(x.DHDt, return_internal_reference())
set_policy(x.neighbor, return_internal_reference())

add_property(x, "numNodes", "numNodes")
add_property(x, "numInternalNodes", "numInternalNodes", "numInternalNodes")
add_property(x, "numGhostNodes", "numGhostNodes", "numGhostNodes")
add_property(x, "firstGhostNode", "firstGhostNode")
add_property(x, "XSPH", "XSPH", "XSPH")
add_property(x, "nodesPerSmoothingScale", "nodesPerSmoothingScale", "nodesPerSmoothingScale")
add_property(x, "maxNumNeighbors", "maxNumNeighbors", "maxNumNeighbors")
add_property(x, "hmin", "hmin", "hmin")
add_property(x, "hmax", "hmax", "hmax")
add_property(x, "hminratio", "hminratio", "hminratio")

#-------------------------------------------------------------------------------
# Instantiations.
#-------------------------------------------------------------------------------
x1d = x("Spheral::Dim<1>", "NodeList1d")
x2d = x("Spheral::Dim<2>", "NodeList2d")
x3d = x("Spheral::Dim<3>", "NodeList3d")
