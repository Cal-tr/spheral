state = Template("Spheral::PhysicsSpace::HydroState", "ExtendHydro.hh")

#-------------------------------------------------------------------------------
# Set return type policies
#-------------------------------------------------------------------------------
set_policy(state.mass, return_internal_reference())
set_policy(state.position, return_internal_reference())
set_policy(state.velocity, return_internal_reference())
set_policy(state.massDensity, return_internal_reference())
set_policy(state.specificEnergy, return_internal_reference())
set_policy(state.Hfield, return_internal_reference())
set_policy(state.DvDx, return_internal_reference())
set_policy(state.weight, return_internal_reference())
set_policy(state.pressure, return_internal_reference())
set_policy(state.soundSpeed, return_internal_reference())

#-------------------------------------------------------------------------------
# Instantiate the templated bindings.
#-------------------------------------------------------------------------------
hydro1d = state("Spheral::Dim<1>", "HydroState1d")
hydro2d = state("Spheral::Dim<2>", "HydroState2d")
hydro3d = state("Spheral::Dim<3>", "HydroState3d")
