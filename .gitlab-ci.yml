
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  ALLOC_NAME: ${CI_PROJECT_NAME}_ci_${CI_PIPELINE_ID}
  BUILD_ROOT: ${CI_PROJECT_DIR}

stages:
  - r_build_and_install
  - r_run_test_suite
  - r_update_mirror

# ------------------------------------------------------------------------------

.on_ruby:
  tags:
    - shell
    - ruby
  variables:
    HOST: "ruby"
    ARCH: "toss_3_x86_64_ib"
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $ON_RUBY == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /release_resources/'
      when: always
    - when: on_success


.build_and_install:
  script:
    - srun -N 1 -c 36 -p pdebug -t 60 scripts/gitlab/build_and_install.py --spec="$SPEC" --lc-modules="$LC_MODULES"

.run_test_suite:
  script:
    - ml load "$LC_MODULES"
    - cd build_"$HOST"-"$ARCH"-"$SPEC"/install/
    - ./spheral -c "import Spheral"
    - ./spheral-atstest --atsExe /usr/gapps/ats/"$ARCH"/7.0.5/bin/ats tests/integration.ats
    #- source test.sh

.build_and_test:
  script:
    - ml load "$LC_MODULES"
    - srun -N 1 -c 36 -p pdebug -t 60 ml load "$LC_MODULES" && scripts/gitlab/build_and_install.py --spec="$SPEC" --lc-modules="$LC_MODULES"
    - ./build_"$ARCH"-"$SPEC"/install/spheral-atstest --atsExe /usr/gapps/ats/"$ARCH"/7.0.5/bin/ats build_"$ARCH"-"$SPEC"/install/tests/integration.ats

# ------------------------------------------------------------------------------

.gcc_8_1_0_mvapich2:
  variables:
    SPEC: "gcc@8.1.0^mvapich2"
    LC_MODULES: "gcc/8.1.0"
    EXTRA_CMAKE_ARGS: "-DCMAKE_BUILD_TYPE=Debug"

.gcc_8_3_1_mvapich2:
  variables:
    SPEC: "gcc@8.3.1^mvapich2"
    LC_MODULES: "gcc/8.3.1"
    EXTRA_CMAKE_ARGS: "-DENABLE_DOCS=On"

.clang_9_0_0_mvapich2:
  variables:
    SPEC: "clang@9.0.0^mvapich2"
    LC_MODULES: "clang/9.0.0"
    EXTRA_CMAKE_ARGS: ""

# ------------------------------------------------------------------------------

# gcc8.1.0+mpi
gcc_8_1_0_mvapich2:
  extends: [.gcc_8_1_0_mvapich2, .build_and_test, .on_ruby]
  stage: r_build_and_install
  artifacts:
    paths:
      - "*.*.logs/"
    expire_in: 1 day

gcc_8_3_1_mvapich2:
  extends: [.gcc_8_3_1_mvapich2, .build_and_test, .on_ruby]
  stage: r_build_and_install
  artifacts:
    paths:
      - "*.*.logs/"
    expire_in: 1 day
  

## gcc8.1.0+mpi
#build:gcc_8_1_0_mvapich2:
#  extends: [.gcc_8_1_0_mvapich2, .build_and_install, .on_ruby]
#  stage: r_build_and_install
#  artifacts:
#    paths:
#      - build_ruby-toss_3_x86_64_ib-gcc@8.1.0^mvapich2/install/
#    expire_in: 1 day
#  
#ats:gcc_8_1_0_mvapich2:
#  extends: [.gcc_8_1_0_mvapich2, .run_test_suite, .on_ruby]
#  needs: ["build:gcc_8_1_0_mvapich2"]
#  stage: r_run_test_suite
#  artifacts:
#    paths:
#      - build_ruby-toss_3_x86_64_ib-gcc@8.1.0^mvapich2/install/
#    expire_in: 1 day
#
## gcc8.3.1+mpi
#build:gcc_8_3_1_mvapich2:
#  extends: [.gcc_8_3_1_mvapich2, .build_and_install, .on_ruby]
#  stage: r_build_and_install
#  artifacts:
#    paths:
#      - build_ruby-toss_3_x86_64_ib-gcc@8.3.1^mvapich2/install/
#    expire_in: 1 day
#  
#ats:gcc_8_3_1_mvapich2:
#  extends: [.gcc_8_3_1_mvapich2, .run_test_suite, .on_ruby]
#  needs: ["build:gcc_8_3_1_mvapich2"]
#  stage: r_run_test_suite
#  artifacts:
#    paths:
#      - build_ruby-toss_3_x86_64_ib-gcc@8.3.1^mvapich2/install/
#    expire_in: 1 day

update_mirror:
  extends: [.on_ruby]
  stage: r_update_mirror
  script:
    - srun -N 1 -c 36 -p pdebug -t 60 scripts/devtools/tpl-manager.py --spec-list="scripts/devtools/spec-list.json" --use-mirror=True --spheral-spack-dir=$PWD/mirror-update-tpls
    - ./scripts/devtools/update-mirror.py --spheral-spack-dir=$PWD/mirror-update-tpls --mirror-dir="/usr/WS2/davis291/gapps/Spheral/spheral-spack-tpls/mirror" --secret-key-dir="~/private_gpg_backup/"
  rules:
    - if: '$CI_COMMIT_REF_NAME == "develop"'
      when: always
