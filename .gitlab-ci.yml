
variables:
  GIT_SUBMODULE_STRATEGY: recursive
  ALLOC_NAME: ${CI_PROJECT_NAME}_ci_${CI_PIPELINE_ID}
  BUILD_ROOT: ${CI_PROJECT_DIR}

stages:
  - r_build_and_install
  - r_run_test_suite

.on_ruby:
  tags:
    - shell
    - ruby
  rules:
    - if: '$CI_COMMIT_BRANCH =~ /_qnone/ || $ON_RUBY == "OFF"' #run except if ...
      when: never
    - if: '$CI_JOB_NAME =~ /release_resources/'
      when: always
    - when: on_success


.build_and_install:
  script:
    - srun -N 1 -c 36 -p pdebug -t 60 scripts/gitlab/build_and_install.sh
    #- mkdir -p build_ruby-toss_3_x86_64_ib-gcc@8.1.0/install/
    #- cd build_ruby-toss_3_x86_64_ib-gcc@8.1.0/install/
    #- echo "echo running dummy file" > test.sh

.run_test_suite:
  script:
    - cd build_ruby-toss_3_x86_64_ib-gcc@8.1.0^mvapich2/install/
    - ./spheral -c "import Spheral"
    - ./spheral-atstest tests/integration.ats
    #- source test.sh

.gcc_8_1_0_mvapich2_t:
  variables:
    SPEC: "gcc@8.1.0^mvapich2"
    LC_MODULES: "gcc/8.1.0"

gcc_8_1_0_mvapich2:
  extends: [.gcc_8_1_0_mvapich2_t, .build_and_install, .on_ruby]
  stage: r_build_and_install
  artifacts:
    paths:
      - build_ruby-toss_3_x86_64_ib-gcc@8.1.0^mvapich2/install/
  
ats_gcc_8_1_0_mvapich2:
  extends: [.gcc_8_1_0_mvapich2_t, .run_test_suite, .on_ruby]
  needs: [gcc_8_1_0_mvapich2]
  stage: r_run_test_suite

